%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/youssufsaleh/Downloads/SVD-5.xlsx
%    Worksheet: Demographics_Final
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/03/04 15:23:05

%% Import the data
[~, ~, raw] = xlsread('/Users/youssufsaleh/Downloads/SVD-5.xlsx','Demographics_Final');
raw = raw(2:end,:);
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[1,16,17,18,19]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[2,3,4,5,6,7,8,9,10,11,12,13,14,15]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
Qs_Final_raw = table;

%% Allocate imported array to column variable names
Qs_Final_raw.OSVID = stringVectors(:,1);
Qs_Final_raw.Age = data(:,1);
Qs_Final_raw.GenderM1 = data(:,2);
Qs_Final_raw.LARS_E = data(:,3);
Qs_Final_raw.LARS_AI = data(:,4);
Qs_Final_raw.LARS_SA = data(:,5);
Qs_Final_raw.LARS_TOTAL = data(:,6);
Qs_Final_raw.AES_TOTAL = data(:,7);
Qs_Final_raw.AES_Cognitive = data(:,8);
Qs_Final_raw.AES_Behavioural = data(:,9);
Qs_Final_raw.AES_Emotional = data(:,10);
Qs_Final_raw.Other = data(:,11);
Qs_Final_raw.BDI = data(:,12);
Qs_Final_raw.ACE_Total = data(:,13);
Qs_Final_raw.Excluded = data(:,14);
Qs_Final_raw.FullStructural = stringVectors(:,3);
Qs_Final_raw.FullDiffusion30 = stringVectors(:,4);
Qs_Final_raw.FullDiffusion60 = stringVectors(:,5);

%% Clear temporary variables
clearvars data raw stringVectors R;



%% Extract excluded subjects
FQs_Ex= Qs_Final_raw(Qs_Final_raw.Excluded==0,:);

save('Questionnaires_final','FQs_Ex','Qs_Final_raw');



%% Correlation plots 

[R,PValue,H] = corrplot(FQs_Ex(:,{'Age','LARS_TOTAL' 'LARS_E','LARS_AI','LARS_SA', ...
 'AES_TOTAL','AES_Cognitive','AES_Behavioural', ...
 'AES_Emotional','Other','BDI','ACE_Total'}), ...
 'type','Pearson','testR','on','rows','pairwise');


%% Look at the average data. 

c = @cmu.colors;

close all
grp_rew_2D = squeeze(mean(freqmap,1))';
H1=shadedErrorBar(1:6,nanmean(grp_rew_2D),   ...
    nanstd(grp_rew_2D./sqrt(36)),'lineprops',...
    {'color', c('royal purple')},...
    'patchSaturation',0.3);
hold on 
grp_eff_2D = squeeze(mean(freqmap,2))';
H2=shadedErrorBar(1:6,nanmean(grp_eff_2D),   ...
    nanstd(grp_eff_2D./sqrt(36)),'lineprops',...
    {'color',c('air force blue')},  ...
    'patchSaturation',0.3);
axis square
ylim([0 1.1]);xlim([0 7])
ax=gca;
set(ax,'fontWeight','bold','fontSize',16,'XTick',[1:1:5], ...
  'XTickLabel',{'1','2','3','4','5','6'})
xlabel('Reward/Effort level')
ylabel('Prop. Offers Accepted')
ylim([0.2 1])
title('Ave. Group Performance across task');
hold off


[lgd, icons, plots, txt] = legend([H1.mainLine H2.mainLine],{'Reward','Effort'});

% for each individual. 

subjects = [1:83];
close all
% now for each individual. 
% create matrices compatible with the errorbar function in order to
% generate errorbars for each individual's plots. 
% first rearrange the choice map so that we can have each subjects choice
% data individually available to create error bars for each. 
permute_choicemap_rew = squeeze(mean(permute(choicemap,[1,2,4,3]),1));
permute_choicemap_eff = squeeze(mean(permute(choicemap,[1,2,4,3]),2));
dat_rew = permute(permute_choicemap_rew,[2,1,3]);
dat_eff = permute(permute_choicemap_eff,[2,1,3]);

% now generate a subplot for each individual with their performance. 
%create legend indices
close all
figure()
subj = size(D.R,1);
exclude = [26:28 32:33];
for i = 1:subj
  subplot(10,9,i)
  hold on
  H3= shadedErrorBar(1:6,nanmean(dat_rew(:,:,i),1), ...
    nanstd(dat_rew(:,:,i)./sqrt(6)),'lineprops',...
    {'color', c('royal purple')},...
    'patchSaturation',0.3);
  hold on
  H4= shadedErrorBar(1:6,nanmean(dat_eff(:,:,i),1), ...
    nanstd(dat_eff(:,:,i)./sqrt(6)),'lineprops',...
    {'color', c('air force blue')},...
    'patchSaturation',0.3);
  hold off
  hold off
  axis square
  ylim([0 1.1]); xlim([0 6]);
  title(['Subject ' num2str(subjects(i))],'FontSize',8);
  %ax=gca;
  %set(ax,'fontWeight','bold','fontSize',12,'XTick',[1:1:5], ...
   % 'XTickLabel',{'1','2','3','4','5'})
end

[lgd, icons, plots, txt] = legend([H3.mainLine H4.mainLine],...
  {'Reward','Effort'});

 [ax1,h1]=suplabel('Effort/Reward Level');
 [ax2,h2]=suplabel('Prop. Accepted','y');
























